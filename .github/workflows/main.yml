name: Django-app workflow
on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line
        cd backend/foodgram
        pip install -r requirements.txt
    - name: Test with flake8
      run: |
        python -m flake8
        
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push backend image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/foodgram/
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest
          
      - name: Push frontend image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend/
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest
  
  deploy:  
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd infra/
          sudo docker-compose stop
          sudo docker-compose rm -f backend frontend
          sudo docker imagee rm yanak38/frontend yanak38/backend
          sudo docker-compose pull frontend backend
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          cd foodgram-project-react/infra
          sudo docker-compose up -d
         # sudo docker run --rm -d  yanak38/foodgram-project:latest 
    

